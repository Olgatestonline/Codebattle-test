---
- summary: |
    Проверка регистрации на сайте по адресу электронной почты
  requirement: |
    Пользователь должен иметь возможность зарегистрироваться на сайте
  prerequisites: |
    открыта главная страница https://codebattle.hexlet.io/
  test-data: |
    no data
  steps:
    - вводим Nickname
    - вводим email
    - вводим пароль
    - подтверждаем пароль
    - нажимаем на кнопку "Submit"
  expected-result: |
    Пользователь должен попасть на страницу https://codebattle.hexlet.io/#lobby под своим логином

- summary: |
    Проверка регистрации на сайте по профилю на GitHub
  requirement: |
    Пользователь должен иметь возможность зарегистрироваться на сайте
  prerequisites: |
    открыта главная страница https://codebattle.hexlet.io/
  test-data: |
    профиль пользователя на GitHub
  steps:
    - нажимаем на кнопку "Sing in with GitHub"
    - в соответствующие поля вводим username и пароль профиля на GitHub 
  expected-result: |
    Пользователь должен попасть на страницу https://codebattle.hexlet.io/#lobby под своим логином

- summary: |
    Проверка регистрации на сайте по профилю на Discord
  requirement: |
    Пользователь должен иметь возможность зарегистрироваться на сайте
  prerequisites: |
    открыта главная страница https://codebattle.hexlet.io/
  test-data: |
    профиль пользователя на Discord
  steps:
    - нажимаем на кнопку "Sing in with Discord"
    - в соответствующие поля вводим username и пароль профиля на Discord 
  expected-result: |
    Пользователь должен попасть на страницу https://codebattle.hexlet.io/#lobby под своим логином

- summary: |
    Проверка входа пользователя по существующему адресу электронной почты (логину) и паролю
  requirement: |
    Пользователь должен иметь возможность авторизоваться на сайте под верным логином и паролем
  prerequisites: |
    открыта главная страница https://codebattle.hexlet.io/
  test-data: |
    email = testiss1@yandex.ru Пароль = 1234567t
  steps:
    - Вводим email
    - Вводим пароль
    - Нажимаем кнопку «Sing in»
  expected-result: |
    Пользователь должен попасть на страницу https://codebattle.hexlet.io/#lobby под своим логином

- summary: |
    Проверка входа пользователя по профилю на GitHub
  requirement: |
    Пользователь должен иметь возможность авторизоваться на сайте под верным логином и паролем
  prerequisites: |
    открыта главная страница https://codebattle.hexlet.io/
  test-data: |
    профиль пользователя на GitHub
  steps:
    - нажимаем на кнопку "Sing in with GitHub"
  expected-result: |
    Пользователь должен попасть на страницу https://codebattle.hexlet.io/#lobby под своим логином

summary: |
    Проверка входа пользователя по профилю на Discord
  requirement: |
    Пользователь должен иметь возможность авторизоваться на сайте под валидным логином и паролем
  prerequisites: |
    открыта главная страница https://codebattle.hexlet.io/
  test-data: |
    профиль пользователя на Discord
  steps:
    - нажимаем на кнопку "Sing in with Discord"
  expected-result: |
    Пользователь должен попасть на страницу https://codebattle.hexlet.io/#lobby под своим логином

- summary: |
    Проверка входа пользователя с несуществующими адресу электронной почты (логином) и паролем
  requirement: |
    При неправильном логине или пароле пользователь должен получить сообщение об ошибке
  prerequisites:
    открыта главная страница https://codebattle.hexlet.io/
  test-data: |
    email - testiss4@yandex.ru, пароль - 1234567t4
  steps:
    - Вводим email
    - Вводим пароль
    - Нажимаем кнопку «Sing in»
  expected-result: |
    Пользователь должен получить сообщение об ошибке

- summary: |
    Проверка восстановления пользователем пароля
  requirement: |
    Пользователь должен иметь возможность авторизоваться на сайте под валидным логином и паролем
  prerequisites:
    открыта главная страница https://codebattle.hexlet.io/
  test-data: |
    email = testiss1@yandex.ru неверный пароль = 1
  steps:
    - Вводим email из test-data
    - Вводим пароль из test-data
    - Нажимаем кнопку «Войти» (получаем сообщение'invalid_password')
    - Нажимаем на ссылку "Forgot you password?"
    - проверяем электронную почту
  expected-result: |
    Пользователь должен получить на электронную почту инструкцию о восстановлении пароля

- summary: |
    Проверка возможности редактирования типа звука в настройках профиля
  requirement: |
    Пользователь должен иметь возможность редактировать свои данные на сайте
  prerequisites: |
    осуществлён вход на сайт https://codebattle.hexlet.io/ под зарегистрированным пользователем
  test-data: |
    email = testiss1@yandex.ru Пароль = 1234567t
    звук "Dendy"
    звук "CS"
    звук "Standart"
    звук "Silent"
  steps:
    - нажать на никнейм учётной записи
    - перейти в раздел "Settings"
    - выбрать настройку звука из тестовых данных
    - нажать кнопку "Save"
    - вернуться на страницу https://codebattle.hexlet.io/#lobby
    - нажать на никнейм учётной записи
    - перейти в раздел "Settings"
  expected-result: |
    Выбранные настройки сохранены (отмечен звук согласно тестовым данным)

- summary: |
    Проверка возможности редактирования аватара в настройках профиля
  requirement: |
    Пользователь должен иметь возможность редактировать свои данные на сайте
  prerequisites: |
    осуществлён вход на сайт https://codebattle.hexlet.io/ под зарегистрированным пользователем
  test-data: |
    email = testiss1@yandex.ru Пароль = 1234567t
  steps:
    - нажать на никнейм учётной записи
    - перейти в раздел "Settings"
    - изменить аватар
  expected-result: |
    Аватар пользователя изменён

- summary: |
    Проверка возможности редактирования email в настройках профиля
  requirement: |
    Пользователь должен иметь возможность редактировать свои данные на сайте
  prerequisites: |
    осуществлён вход на сайт https://codebattle.hexlet.io/ под зарегистрированным пользователем
  test-data: |
    email = testiss1@yandex.ru Пароль = 1234567t
  steps:
    - нажать на никнейм учётной записи
    - перейти в раздел "Settings"
    - изменить адрес электронной почты 
  expected-result: |
    Адрес электронной почты пользователя изменён

- summary: |
    Проверка возможности создания игры на сайте
  requirement: |
    Пользователь должен иметь возможность создавать и выбирать игры на сайте
  prerequisites: |
    осуществлён вход на сайт https://codebattle.hexlet.io/ под зарегистрированным пользователем
  test-data: |
    email = testiss1@yandex.ru Пароль = 1234567t
  steps:
    - нажимаем на кнопку "Create a game"
    - выбираем Level - 1, Game Type - With a bot, Time control - 10min, random task, Tags - rest 
    - Нажимаем кнопку «Create battle»
  expected-result: |
    Открывается страница активной игры

- summary: |
    Проверка победы игрока в активной игре
  requirement: |
    Пользователь должен иметь возможность играть в активную игру и побеждать в ней
  prerequisites:
    осуществлён вход на сайт https://codebattle.hexlet.io/ под зарегистрированным пользователем
  test-data: |
    email = testiss1@yandex.ru Пароль = 1234567t
    код решения:
    const _ = require("lodash");
    сonst R = require("rambda");

    const solution = (width, length) => {
      return width * length;
    };
  steps:
    - нажимаем кнопку "Create a game"
    - выбираем Level - 1, Game Type - With a bot, Time control - 10min, выбор игры - 'rect_area'
    - нажимаем кнопку "Create battle"
    - вставляетм в игру код решения 
  expected-result: |
    Пользователь должен получить сообщение о победе в игре, сопровождаемое звуковым оформлением

- summary: |
    Проверка проигрыша игрока в активной игре при выигрыше соперника
  requirement: |
    При проигрыше в активной игре пользователь должен получить сообщение о поражении
  prerequisites:
    осуществлён вход на сайт https://codebattle.hexlet.io/ под зарегистрированным пользователем
  test-data: |
    email = testiss1@yandex.ru Пароль = 1234567t
  steps:
    - нажимаем кнопку "Create a game"
    - выбираем Level - 1, Game Type - With a bot, Time control - 8min, choice - random
    - нажимаем кнопку "Create battle"
    - ожилаем, пока выиграет бот
  expected-result: |
    Пользователь должен получить сообщение о проигрыше в игре, сопровождаемое звуковым оформлением    

- summary: |
    Проверка проигрыша игрока в активной игре при сдаче
  requirement: |
    При проигрыше в активной игре пользователь должен получить сообщение о поражении
  prerequisites:
    осуществлён вход на сайт https://codebattle.hexlet.io/ под зарегистрированным пользователем
  test-data: |
    email = testiss1@yandex.ru Пароль = 1234567t
  steps:
    - нажимаем кнопку "Create a game"
    - выбираем Level - 1, Game Type - With a bot, Time control - 8min, choice - random
    - нажимаем кнопку "Create battle"
    - нажимаем на кнопку "Give up"
    - подтвержаем действие, нажимая на кнопку "Give up"
  expected-result: |
    Пользователь должен получить сообщение о проигрыше в игре, сопровождаемое звуковым оформлением
  
- summary: |
    Проверка проигрыша игрока в активной игре при превышении лимита времени
  requirement: |
    При проигрыше в активной игре пользователь должен получить сообщение о поражении
  prerequisites:
    осуществлён вход на сайт https://codebattle.hexlet.io/ под зарегистрированным пользователем
  test-data: |
    email = testiss1@yandex.ru Пароль = 1234567t
  steps:
    - нажимаем кнопку "Create a game"
    - выбираем Level - 1, Game Type - With a bot, Time control - 3min, choice - random
    - нажимаем кнопку "Create battle"
    - Ожидаем, пока закончитнся время игры.
  expected-result: |
    Пользователь должен получить сообщение об истечении лимита времени, сопровождаемое звуковым оформлением

- summary: |
    Проверка возможности просмотра активной игры других игроков в режиме реального времени
  requirement: |
    Пользователь должен иметь возможность просматривать активные игры других игроков на сайте в режиме реального времени
  prerequisites:
    осуществлён вход на сайт https://codebattle.hexlet.io/ под зарегистрированным пользователем
  test-data: |
    email = testiss1@yandex.ru Пароль = 1234567t
  steps:
    - переходим на вкладку lobby
    - нажимаем на кнопку "Show" рядом с активной игрой
  expected-result: |
    Открывается страница активной игры в режиме реального времени

- summary: |
    Проверка возможности просмотра записи завершившейся игры на сайте
  requirement: |
    Пользователь должен иметь возможность просматривать запись завершившихся игр на сайте
  prerequisites:
    осуществлён вход на сайт https://codebattle.hexlet.io/ под зарегистрированным пользователем
  test-data: |
    email = testiss1@yandex.ru Пароль = 1234567t
  steps:
    - Заходим на вкладку "History"
    - нажимаем на кнопку "Show" рядом с завершившейся игрой 
  expected-result: |
    Открывается страница со статистикой завершённой игры  

- summary: |
    Проверка возможности игры с ботом без регистрации  на сайте
  requirement: |
    Пользователь должен иметь возможность попробовать игру с ботом без регистрации на сайте
  prerequisites: |
    открыта главная страница https://codebattle.hexlet.io/
  test-data: |
    no data
  steps:
    - Нажимаем на кнопку "Try simple battle"
  expected-result: |
    Пользователь попадает на страницу рандомной активной игры  

- summary: |
    Проверка возможности ознакомления с правилами игры на сайте
  requirement: |
    Пользователь должен иметь возможность ознакомиться с правилами игры на сайте
  prerequisites: |
    открыта главная страница https://codebattle.hexlet.io/
  test-data: |
    no data
  steps:
    - Нажимаем на кнопку "Try simple battle"
    - На странице активной игры нажимаем на кнопку "Show guide"
  expected-result: |
    Открывается пошаговый гайд игры

- summary: |
    Проверка отображения таймера, чат, редактора кода соперника в реальном времени во время игры.
  requirement: |
    Во время активной игры пользователь должен иметь возможность контролировать время, видеть код своего соперника, проверять свой код
  prerequisites: |
    открыта главная страница https://codebattle.hexlet.io/
  test-data: |
    no data
  steps:
    - Нажимаем на кнопку "Try simple battle"
  expected-result: |
    На странице активной игры отображается таймер, чат, редактор кода соперника в реальном времени во время игры.

- summary: |
    Возможность проверки своего кода в реальном времени во время игры.
  requirement: |
    Во время активной игры пользователь должен иметь возможность контролировать время, видеть код своего соперника, проверять свой код
  prerequisites: |
    открыта главная страница https://codebattle.hexlet.io/
  test-data: |
    no data
  steps:
    - нажимаем на кнопку "Try simple battle"
    - нажимаем на кнопку "Run" в открывшейся рандомной игре
  expected-result: |
    В окне "Output" выводится сообщение о правильном либо неправильном коде, сопровождаемое звуковым оформлением

- summary: |
    Проверка возможности переподключения к игре после обрыва связи
  requirement: |
    Пользователь должен иметь возможность переподключиться в игру, если произошёл обрыв связи во время игры
  prerequisites: |
    осуществлён вход на сайт https://codebattle.hexlet.io/ под зарегистрированным пользователем
  test-data: |
    email = testiss1@yandex.ru Пароль = 1234567t
    код решения:
     const _ = require("lodash");
     const R = require("rambda");

     const solution = (voltage, current) => {
      // console.log("use print for debug")
        return voltage * current;
     };

     module.exports = solution;
  steps:
    - нажимаем кнопку "Create a game"
    - выбираем Level - 1, Game Type - With a bot, Time control - 10min, выбор игры - 'power_calculator'
    - нажимаем кнопку "Create battle"
    - начинаем приводить код в соответствие с решением
    - закрываем окно браузера, разрывая соединение с сервером
    - открываем окно браузера
    - авторизуемся на сайте https://codebattle.hexlet.io/ в соответствии с тестовыми данными
  expected-result: |
    Пользователь попадает на страницу начатой активной игры в тот момент, когда было прервано соединение

- summary: |
    Проверка возможности отправки и получения сообщений в чате игры зрителем
  requirement: |
    Зритель игры должен иметь возможность отправить сообщения в чат игры
  prerequisites: |
    открыта главная страница https://codebattle.hexlet.io/ в браузере Google Chrome
    открыта гоавная страница https://codebattle.hexlet.io/ в браузере Firefox
  test-data: |
    Пользователь 1: email = testiss1@yandex.ru Пароль = 1234567t
    Пользователь 2: email = testiss2@yandex.ru Пароль = 1234567t2
  steps:
    - Авторизуемся на сайте Пользователем 1 на сайте Chrome
    - Авторизуемся на сайте Пользователем 2 на сайте Firefox
    - Пользователь 1 начинает игру с ботом
    - Пользователь 2 заходит в режим просмотра игры между Пользователем 1 и ботом
    - Пользователь 2 пишет сообщение в чате игры
  expected-result: |
    Сообщение Пользователя 2 отображается в чате игры, он видит ответы бота и Пользователя 1

- summary: |
    Проверка отслеживания рейтинга на сайте
  requirement: |
    Пользователь должен иметь возможность отслеживать свой рейтинг на сайте
  prerequisites: |
    осуществлён вход на сайт https://codebattle.hexlet.io/ под зарегистрированным пользователем
  test-data: |
    email = testiss1@yandex.ru Пароль = 1234567t
  steps:
    - Нажимиаем на никнейм учётной записи
    - в выпадающем меню выбираем "My profile" 
  expected-result: |
    Открывается окно с отображением рейтинга игрока в системе

- summary: |
    Проверка сортировки игроков по рейтингу (убывание, возрастание)
  requirement: |
    Пользователь должен иметь возможность отслеживать свой рейтинг на сайте
  prerequisites: |
    осуществлён вход на сайт https://codebattle.hexlet.io/ под зарегистрированным пользователем
  test-data: |
    email = testiss1@yandex.ru Пароль = 1234567t
  steps:
    - Нажимиаем на никнейм учётной записи
    - внизу таблицы 'Leaderboard' нажимаем на ссылку 'Top list'
    - выбираем закладку 'total', сортируем игроков по рейтингу (убывание, возрастание)
    - выбираем закладку 'monthly', сортируем игроков по рейтингу (убывание, возрастание)
    - выбираем закладку 'weekly', сортируем игроков по рейтингу (убывание, возрастание)
  expected-result: |
    Происходит сортировка игроков по рейтингу (убывание, возрастание)

- summary: |
    Проверка возможности вызова другого игрока на баттл и возможности быть вызванным
  requirement: |
    Пользователь должен иметь возможность играть в активную игру и побеждать в ней
  prerequisites: |
    открыта главная страница https://codebattle.hexlet.io/ в браузере Chrome
    открыта главная страница https://codebattle.hexlet.io/ в браузере Firefox
  test-data: |
    Пользователь 1: email = testiss1@yandex.ru Пароль = 1234567t
    Пользователь 2: email = testiss2@yandex.ru Пароль = 1234567t2
    код решения:
     const _ = require("lodash");
     const R = require("rambda");

     const solution = (voltage, current) => {
      // console.log("use print for debug")
        return voltage * current;
     };

     module.exports = solution;
  steps:
    - Авторизуемся на сайте Пользователем 1 на сайте Chrome
    - Авторизуемся на сайте Пользователем 2 на сайте Firefox
    - Пользователь 1 нажимает на кнопку "Create a game"
    - в окне выбора условий игры выбирает Game Type = with a friend
    - в поле выбора оппонента выбирает пользователя testiss2
    - в поле выбора игры выбирает "power_calculator"
    - нажимает на кнопку "Create invite"
  expected-result: |
    У Пользователя 2 рядом с никнеймом загорается уведомление, он нажимает на уведомление и соглашается на игру.
    Оба пользователя автоматически переносятся в окно активной игры 

- summary: |
    Проверка выбора языка программирования для игры 
  requirement: |
    Пользователь должен иметь возможность выбора языка программирования для игры
  prerequisites: |
    осуществлён вход на сайт https://codebattle.hexlet.io/ под зарегистрированным пользователем
  test-data: |
    email = testiss1@yandex.ru Пароль = 1234567t
  steps:
    - нажимаем кнопку "Create a game"
    - выбираем рандомную игру
    - на странице игры из выпадающего списка выбираем язык программирования
  expected-result: |
    Язык программирования успешно выбран, код в редакторе изменился на код выбранного языка.

- summary: |
    Проверка адаптивности сайта на мобильных устройствах 
  requirement: |
    Сайт должен быть удобным на мобильных устройствах
  prerequisites: |
    Google Chrome, открыта главная страница https://codebattle.hexlet.io/
  test-data: |
    mail = testiss2@yandex.ru Пароль = 1234567t2
    Mobile S - 320px
    Mobile M - 375px
    Mobile L - 425px
    Tablet - 768px
  steps:
    - на главной странице https://codebattle.hexlet.io/ нажимаем на кнопку "Try simple battle"
    - открыть DevTools
    - нажать на кнопку "Показать или скрыть панель инструментов устройства"
    - выбрать устройство из списка согласно тестовым данным 
    - просмотреть отображение главной страницы сайта https://codebattle.hexlet.io/#lobby
    - нажать на кнопку 'Give Up'
    - подтвердить 'Give Up'
  expected-result: |
    Сайт адаптивен с мобильными устройствами, весь функционал сайта работает корректно

  - summary: |
    Проверка совместимости сайта с последними версиями браузеров
  requirement: |
    Сайт нужно протестировать на совместимость с последними версиями браузеров
  prerequisites: |
    no prerequisites
  test-data: |
    mail = testiss2@yandex.ru Пароль = 1234567t2
    последняя версия браузера FireFox
    последняя версия браузера Coogle Chrome
    последняя версия браузера Opera
    последняя версия браузера Safari
  steps: 
    - выбрать браузер из списка согласно тестовым данным 
    - просмотреть отображение главной страницы сайта https://codebattle.hexlet.io/
    - зайти на сайт незарегистрированным пользователем
    - проверить функционал пробной игры с ботом
    - зайти на сайт зарегистрированным пользователем согласно тестовым данным
    - проверить редактирование настроек
    - проверить возможность просмотра текущих игр
  expected-result: |
    Сайт совместим с последними версиями браузеров, весь функционал сайта работает корректно

- summary: |
    Проверка переключения в игре на русский язык
  requirement: |
    Сайт должен быть разработан с учётом удобства использования и оптимизирован для скорости работы
  prerequisites: |
    открыта главная страница https://codebattle.hexlet.io/
  test-data: |
    no data
  steps: 
    - нажимаем на кнопку "Try simple battle"
    - в мено выбора языка в игре выбрать "Ru"
    - проверить перевод условия игры на русский язык
  expected-result: |
  Условие игры переведено на русский язык и умещается в размер блока. Вёрстка сайта при переводе не нарушена.

- summary: |
    Проверка переключения в игре на английский язык
  requirement: |
    Сайт должен быть разработан с учётом удобства использования и оптимизирован для скорости работы
  prerequisites: |
    открыта главная страница https://codebattle.hexlet.io/
  test-data: |
    no data 
  steps: 
    - нажимаем на кнопку "Try simple battle"
    - в мено выбора языка в игре выбрать "En"
    - проверить перевод условия игры на английскиий язык
  expected-result: |
  Условие игры переведено на английский язык и умещается в размер блокf. Вёрстка сайта при переводе не нарушена.

- summary: |
    Проверка вёрстки сайта - выравнивание элементов
  requirement: |
    Сайт должен быть разработан с учётом удобства использования и оптимизирован для скорости работы
  prerequisites: |
    Браузер Google Chrome, разрешение дисплея 1680*1050, открыта главная страница https://codebattle.hexlet.io/
  test-data: |
    mail = testiss2@yandex.ru Пароль = 1234567t2
  steps: 
    - проверить выравнивание элементов (кнопок, заголовков) на главной странице сайта
    - зайти под авторизованным пользователем согласно тестовым данным
    - проверить выравнивание элементов на странице
  expected-result: |
    Все элементы сайта расположены ровно, кнопки - одной высоты и находятся на одном уровне. 

- summary: |
    Проверка наличия неиспользуеиых CSS и JS  в верстке
  requirement: |
    Сайт должен быть разработан с учётом удобства использования и оптимизирован для скорости работы
  prerequisites: |
    Google Chrome, открыта главная страница сайта https://codebattle.hexlet.io/
  test-data: |
    mail = testiss2@yandex.ru Пароль = 1234567t2
  steps: 
    - открываем панель разработчика DevTools (нажимаем кнопку F12) 
    - вызываем командное меню (Ctrl+Shift+P)
    - Вводим в строку Show Coverage 
    - на панели Coverage (Покрытие) нажимаем Start instrumenting coverage and reload page
  expected-result: |
    Отсутствует неиспользуемый код CSS и JS на странице.

- summary: |
    Проверка скорости загрузки сайта
  requirement: |
    Сайт должен быть способен обрабатывать большое количество траффика (1000 одновременных пользователей)
  prerequisites: |
    Google Chrome, открыта главная страница сайта https://codebattle.hexlet.io/ 
  test-data: |
    no data
  steps: 
    - открываем панель разработчика DevTools (нажимаем кнопку F12) 
    - выбираем вкладку Lighthouse
    - нажимаем на кнопку Analyse page load
  expected-result: |
    Все показатели отчёта находятся в зелёной зоне, отсутствуют ошибки.

- summary: |
    Проверка работы сайта при низкой скорости соединения
  requirement: |
    Сайт должен быть разработан с учётом удобства использования и оптимизирован для скорости работы
  prerequisites: |
    Google Chrome, открыта главная страница сайта  https://codebattle.hexlet.io/
  test-data: |
    no data
  steps: 
    - открываем панель разработчика DevTools (нажимаем кнопку F12) 
    - выбираем вкладку Network
    - выбираем скорость соединения Slow 3G
    - перезагружаем страницу (F5)
  expected-result: |
    Страница отображает текст до загрузки изображений, отсутствуют ошибки в консоли.

- summary: |
    Проверка веса изображений на странице
  requirement: |
    Сайт нужно разработать с учетом удобства использования и оптимизировать для скорости работы
  prerequisites: |
    Google Chrome открыта главная страница сайта https://codebattle.hexlet.io/ 
  test-data: |
    no data
  steps: 
    - открываем панель разработчика DevTools (нажимаем кнопку F12) 
    - выбираем вкладку Network
    - выбираем Img
    - посмотреть в строке состояния суммарный вес всех ихзображений
  expected-result: |
    Скорость загруки изображений не находится в красной зоне, все изображения сжаты в оптимальные форматы и не перегружают сайт.

- summary: |
    Проверка битых ссылок на сайте
  requirement: |
    Сайт нужно разработать с учетом удобства использования и оптимизировать для скорости работы
  prerequisites: |
    Google Chrome, открыта главная страница сайта https://www.drlinkcheck.com 
  test-data: |
    no data
  steps: 
    - в поле проверки вставляем URL нашего приложения https://codebattle.hexlet.io/
    - нажимаем на кнопку Srart check
    - анализируем данные отчета на сайте
  expected-result: |
    На сайте отсутствуют битые ссылки

- summary: |
    Проверка состояния HTTP запросов и ответов при загрузке сайта.
  requirement: |
    Сайт нужно разработать с учетом удобства использования и оптимизировать для скорости работы
  prerequisites: |
    Google Chrome, открыта главная страница сайта https://codebattle.hexlet.io/ 
  test-data: |
    no data
  steps: 
    - открываем панель разработчика DevTools (нажимаем кнопку F12) 
    - переходим на вкладку Network
    - обновляем страницу
    - анализируем данные отчета на вкладке
  expected-result: |
    Все HTTP-запросы уходят на сервер и приходят ответы без ошибок.

- summary: |
    Проверка состояния HTTP запросов и ответов при активной игре.
  requirement: |
    Сайт нужно разработать с учетом удобства использования и оптимизировать для скорости работы
  prerequisites: |
    Google Chrome, открыта главная страница сайта https://codebattle.hexlet.io/ 
  test-data: |
    no data
  steps:
    - нажимаем на кнопку "Try simple battle" 
    - открываем панель разработчика DevTools (нажимаем кнопку F12) 
    - переходим на вкладку Network
    - обновляем страницу
    - анализируем данные отчета на вкладке
  expected-result: |
    Все HTTP-запросы уходят на сервер и приходят ответы без ошибок.

- summary: |
    Проверка безопасности сайта
  requirement: |
    Сайт должен быть безопасным и защищать данные пользователя
  prerequisites: |
    Google Chrome, открыта главная страница сайта https://codebattle.hexlet.io/ 
  test-data: |
    no data
  steps: 
    - открываем панель разработчика DevTools (нажимаем кнопку F12) 
    - переходим на вкладку Security
    - обновляем страницу
    - анализируем отчет на вкладке
  expected-result: |
    Страница защищена, ресурсы запрашиваются с защищенных источников.
